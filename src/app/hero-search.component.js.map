{"version":3,"sources":["app/hero-search.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAkC,iBAAiB,CAAC,CAAA;AAEpD,2BAAkC,iBAAiB,CAAC,CAAA;AACpD,wBAAkC,cAAc,CAAC,CAAA;AAEjD,8BAA8B;AAC9B,QAAO,wBAAwB,CAAC,CAAA;AAEhC,uBAAuB;AACvB,QAAO,yBAAyB,CAAC,CAAA;AACjC,QAAO,gCAAgC,CAAC,CAAA;AACxC,QAAO,wCAAwC,CAAC,CAAA;AAEhD,oCAAkC,uBAAuB,CAAC,CAAA;AAS1D;IAIE,6BACU,iBAAoC,EACpC,MAAc;QADd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAJhB,gBAAW,GAAG,IAAI,iBAAO,EAAU,CAAC;IAIjB,CAAC;IAE5B,iDAAiD;IACjD,oCAAM,GAAN,UAAO,IAAY;QACjB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW;aACjC,YAAY,CAAC,GAAG,CAAC,CAAQ,8DAA8D;aACvF,oBAAoB,EAAE,CAAG,iDAAiD;aAC1E,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAG,sDAAsD;cAE5E,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC;cAEnC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,EAJV,CAIU,CAAC;aAC7B,KAAK,CAAC,UAAA,KAAK;YACV,gCAAgC;YAChC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,MAAM,CAAC,uBAAU,CAAC,EAAE,CAAS,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAU,GAAV,UAAW,IAAU;QACnB,IAAI,IAAI,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAtCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,WAAW,EAAE,8BAA8B;YAC3C,SAAS,EAAE,CAAE,6BAA6B,CAAE;YAC5C,SAAS,EAAE,CAAC,uCAAiB,CAAC;SAC/B,CAAC;;2BAAA;IAkCF,0BAAC;;AAAD,CAjCA,AAiCC,IAAA;AAjCY,2BAAmB,sBAiC/B,CAAA","file":"hero-search.component.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router }            from '@angular/router';\r\n \r\nimport { Observable }        from 'rxjs/Observable';\r\nimport { Subject }           from 'rxjs/Subject';\r\n \r\n// Observable class extensions\r\nimport 'rxjs/add/observable/of';\r\n \r\n// Observable operators\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n \r\nimport { HeroSearchService } from './hero-search.service';\r\nimport { Hero } from './hero';\r\n \r\n@Component({\r\n  selector: 'hero-search',\r\n  templateUrl: './hero-search.component.html',\r\n  styleUrls: [ './hero-search.component.css' ],\r\n  providers: [HeroSearchService]\r\n})\r\nexport class HeroSearchComponent implements OnInit {\r\n  searchheroes: Observable<Hero[]>;\r\n  private searchTerms = new Subject<string>();\r\n \r\n  constructor(\r\n    private heroSearchService: HeroSearchService,\r\n    private router: Router) {}\r\n \r\n  // Push a search term into the observable stream.\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    this.searchheroes = this.searchTerms\r\n      .debounceTime(300)        // wait 300ms after each keystroke before considering the term\r\n      .distinctUntilChanged()   // ignore if next search term is same as previous\r\n      .switchMap(term => term   // switch to new observable each time the term changes\r\n        // return the http search observable\r\n        ? this.heroSearchService.search(term)\r\n        // or the observable of empty heroes if there was no search term\r\n        : Observable.of<Hero[]>([]))\r\n      .catch(error => {\r\n        // TODO: add real error handling\r\n        console.log(error);\r\n        return Observable.of<Hero[]>([]);\r\n      });\r\n  }\r\n \r\n  gotoDetail(hero: Hero): void {\r\n    let link = ['/detail', hero.identifier];\r\n    this.router.navigate(link);\r\n  }\r\n}"]}