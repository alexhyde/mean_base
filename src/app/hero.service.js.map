{"version":3,"sources":["app/hero.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAA8B,eAAe,CAAC,CAAA;AAE9C,QAAO,6BAA6B,CAAC,CAAA;AAMrC;IACC,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QACtB,cAAS,GAAG,6BAA6B,CAAC;QAC1C,YAAO,GAAG,IAAI,cAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;IAFlC,CAAC;IAIlC,+BAAS,GAAT;QACA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;aACjC,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAY,EAAzB,CAAyB,CAAC;aAC3C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAED,qCAAe,GAAf;QAAA,iBAKC;QAJA,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;YACzB,8CAA8C;YAC9C,UAAU,CAAC,cAAM,OAAA,OAAO,CAAC,KAAI,CAAC,SAAS,EAAE,CAAC,EAAzB,CAAyB,EAAE,IAAI,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,GAAG,EAAE,CAAC;aACvC,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,IAAI,EAAY,EAAzB,CAAyB,CAAC;aAC3C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAAA,CAAC;IACtC,CAAC;IAED,4BAAM,GAAN,UAAO,IAAU;QACd,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI;aAChB,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aACvD,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;aAChB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAED,4BAAM,GAAN,UAAO,IAAY;QAClB,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QACpC,MAAM,CAAC,IAAI,CAAC,IAAI;aACf,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aAChE,SAAS,EAAE;aACX,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,IAAI,EAAU,EAAlB,CAAkB,CAAC;aAC/B,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAED,4BAAM,GAAN,UAAO,IAAY;QAClB,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAC,CAAC;aACpD,SAAS,EAAE;aACX,IAAI,CAAC,cAAM,OAAA,IAAI,EAAJ,CAAI,CAAC;aAChB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAU;QAC7B,OAAO,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,yBAAyB;QACpE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC;IAC/C,CAAC;IAxDF;QAAC,iBAAU,EAAE;;mBAAA;IAyDb,kBAAC;;AAAD,CAxDA,AAwDC,IAAA;AAxDY,mBAAW,cAwDvB,CAAA","file":"hero.service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\nimport { Hero } from './hero';\r\n\r\n\r\n@Injectable()\r\nexport class HeroService {\r\n\tconstructor(private http: Http) { }\r\n\tprivate heroesUrl = 'http://localhost:5000/hero/';\r\n\tprivate headers = new Headers({'Content-Type': 'application/json'});\r\n\t\r\n\t getHeroes(): Promise<Hero[]> {\r\n\t\treturn this.http.get(this.heroesUrl + 'data')\r\n             .toPromise()\r\n             .then(response => response.json() as Hero[])\r\n             .catch(this.handleError);\r\n\t}\r\n\t\r\n\tgetHeroesSlowly(): Promise<Hero[]> {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\t// Simulate server latency with 2 second delay\r\n\t\t\tsetTimeout(() => resolve(this.getHeroes()), 2000);\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetHero(id: number): Promise<Hero> {\r\n\t\treturn this.http.get(this.heroesUrl + 'data/' + id)\r\n             .toPromise()\r\n             .then(response => response.json() as Hero[])\r\n             .catch(this.handleError);;\r\n\t}\r\n\t\r\n\tupdate(hero: Hero): Promise<Hero> {\r\n\t\t  const url = this.heroesUrl + 'data/' + hero.identifier;\r\n\t\t  return this.http\r\n\t\t\t.put(url, JSON.stringify(hero), {headers: this.headers})\r\n\t\t\t.toPromise()\r\n\t\t\t.then(() => hero)\r\n\t\t\t.catch(this.handleError);\r\n\t}\r\n\t\r\n\tcreate(name: string): Promise<Hero> {\r\n\t\tconst url = this.heroesUrl + 'data';\r\n\t\treturn this.http\r\n\t\t.post(url, JSON.stringify({name: name}), {headers: this.headers})\r\n\t\t.toPromise()\r\n\t\t.then(res => res.json() as Hero)\t\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\t\r\n\tdelete(name: string): Promise<void> {\r\n\t\tconst url = this.heroesUrl + 'data/' + name;\r\n\t\treturn this.http.delete(url, {headers: this.headers})\r\n\t\t.toPromise()\r\n\t\t.then(() => null)\r\n\t\t.catch(this.handleError);\r\n\t}\r\n\t\r\n\tprivate handleError(error: any): Promise<any> {\r\n\t\tconsole.error('An error occurred', error); // for demo purposes only\r\n\t\treturn Promise.reject(error.message || error);\r\n\t}\r\n}"]}